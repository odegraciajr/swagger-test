info:
  title: "Washington"
  version: "6.2.1"
  description: "API Documentation for Central server."
swagger: "2.0"
host: fp-washington-sandbox.firstperformance.com
schemes:
  - https
paths:
  /api/v1/card/addCard:
    post:
      tags:
        - "Core"
      summary: "Adds a new card"
      description: "Adds a card to the database."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: false
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "number"
            properties:
              number:
                type: "integer"
                description: "Card number to be added"
                maxLength: 19
                example: 12340000001234
              name:
                type: "string"
                description: "Card name"
                example: "John Doe"
              statementDate:
                type: "integer"
                description: "Due date of the card statement, recommended when using limits for credit."
                example: 31
              userId:
                type: "string"
                description: "Used by issuer to relate cards to a customer"
                example: "testId"
              documentType:
                type: "string"
                description: "String representing the type of document number entered for userId"
                example: "C"
              organizationCode:
                type: "string"
                description: "String representing the affiliated business entity code"
                example: "ORG_Code"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              status_code: 0
              http_code: 200
              hash: "12340000001234"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns HTTP code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              hash:
                type: "string"
                description: "Card number"
                example: "12340000001234"
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Number"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is number / statementDate/ userId / documentType / organizationCode"
                example: "Missing Resource: Number"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/card/{hash}/transactions:
    get:
      tags:
        - "Core"
      summary: "Retrieve transactions related to card"
      description: "Retrieve Card Transactions using card hash"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: false
          type: "string"
        - name: "hash"
          in: "path"
          required: true
          type: "string"
          description: "SHA-256 hash of card number"
        - name: "mcc2"
          in: "query"
          required: false
          type: "string"
          description: "Merchant category id 2"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              status_code: 0
              http_code: 200
              results:
                records:
                  - transactionId: "deadbeef42-012345"
                    hash: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
                    cardBin: 407112
                    amount: 100
                    createdAt: "2016-01-01T00:00:00.000Z"
                    transactionTime: "2016-01-01T00:00:00.000Z"
                    currencyCode: 62
                    paymentChannel: "POS"
                    merchantCategory: ""
                    merchantIdentifier: "McDonald's Time's Square"
                    merchantCountry: "US"
                    merchantState: "NY"
                    receiptURL: ""
                    prune: false
                    decisionDeclinedFields:
                      - null
                    expenseType: ""
                    isRecurring: "false,"
                    systemTraceAuditNumber: "012840"
                    retrievalReferenceNumber: "000000012840"
                    status: "Declined"
                    geoLocationId: ""
                    mcc1: "1-4"
                    mcc2: 4
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              status_message: "Missing Resource: Card Hash"
              http_code: 400
              status_code: 102
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: Card Hash"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/syncOrgs:
    post:
      tags:
        - "Core"
      summary: "Sync all orgs"
      description: "Sync all orgs"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: false
          type: "string"
      responses:
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/subscriptions:
    post:
      tags:
        - "Alerts"
      summary: "Register subscription"
      description: "Register a callback URL to receive specific types of alerts"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: false
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "orgId"
              - "callback"
              - "types"
            properties:
              orgId:
                type: "integer"
                description: "Organization ID"
                example: "1"
              callback:
                type: "string"
                description: "Subscription endpoint URL"
                example: "https://acme.server.com/push"
              types:
                type: "array"
                description: "list of rule ids"
                items:
                  type: "string"
                  example: "rule_11"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              subscriptions:
                - id: 1
                  type: "transaction"
                  callback: "https://acme.server.com/push"
                  createdAt: "2017-03-23T16:50:36.000Z"
                  updatedAt: "2017-03-23T16:50:36.000Z"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns HTTP code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              subscriptions:
                type: "array"
                description: "Returns an array of objects of newly created subscription resources"
                items:
                  type: "object"
                  properties:
                    id:
                      type: "integer"
                      description: "Returns subscription ID"
                      example: 1
                    type:
                      type: "string"
                      description: "Returns subscription type"
                      example: "transaction"
                    callback:
                      type: "string"
                      description: "Returns subscription callback URL"
                      example: "https://acme.server.com/push"
                    createdAt:
                      type: "string"
                      description: "Returns ISO 8601 representation of creation timestamp in UTC"
                      example: "2017-03-23T16:50:36.000Z"
                    updatedAt:
                      type: "string"
                      description: "Returns ISO 8601 representation of update timestamp in UTC"
                      example: "2017-03-23T16:50:36.000Z"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
        400-A:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: callback"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                type: "string"
                description: "Returns Missing Resource: callback"
                example: "Missing Resource: callback"
        400-B:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: callback"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns Invalid Resource: callback"
                example: "Invalid Resource: callback"
        400-C:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: types"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                type: "string"
                description: "Returns Missing Resource: types"
                example: "Missing Resource: types"
        400-D:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: types"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns Invalid Resource: types"
                example: "Invalid Resource: types"
  /(AuthRequest100):
    post:
      tags:
        - "Swiftbox"
      summary: "Auth Request 100"
      description: "Auth Request 100"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: false
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            properties:
              messageType:
                type: "string"
                description: "Auth request type"
                example: "0100"
              accountId:
                type: "string"
                description: "Account ID"
                example: "285004355"
              personId:
                type: "string"
                description: "Person ID"
                example: "402391632"
              transReqId:
                type: "string"
                description: "Transaction Request ID"
                example: "4755492672"
              cardId:
                type: "string"
                description: "Card ID"
                example: "150412528"
              chipCardFlag:
                type: "string"
                example: "Y"
              procCode_003:
                type: "string"
                example: "000000"
              amount_004:
                type: "string"
                example: "10.00"
              transmissionDateTime_007:
                type: "string"
                example: "2018-02-08T09:53:59.873Z"
              transactionLocalDateTime_012_013:
                type: "string"
                example: "2018-02-08T09:53:59.873Z"
              expirationDate_014:
                type: "string"
                example: "1802"
              merchantType_018:
                type: "string"
                example: "5542"
              entryMode_022:
                type: "string"
                example: "020"
              acquiringInstitutionId_032:
                type: "string"
                example: "595"
              deviceTerminalDetails_041:
                type: "string"
                example: "S41268"
              cardAcceptorTerminalId_042:
                type: "string"
                example: "CONCORD NET-EPS"
              cardAcceptorNameLocation_043:
                type: "string"
                example: "1100 CARR RD           WILMINGTON   DEUS"
              merchantName_048:
                type: "string"
                example: "RED ROBIN (DMS Rest.)"
              pin_052:
                type: "string"
                example: "0123456789ABCDEF"
              additionalAmounts_54:
                type: "string"
                example: "0001840C000000000001"
              nationalPOSConditionCode_058:
                type: "string"
                example: "00000012003"
              networkData_063:
                type: "string"
                example: "81PSF999AXS"
              chipCardData_106:
                type: "string"
                example: "|0000|000000||000000|0000000800|000000001012|000006789876|FBCDFFFFFFFFDABC|0000000000|0000|00||||||||||840|00|0|840|141203|17690|00|12345678|"
              additionalData_110:
                type: "string"
                example: "AX101FFF00000000000000000000 PURCHASE IDENTIFIER       010120010000000012345678901234567890123DMS000000000"
              additionalData_123:
                type: "string"
                example: "TDPA01YCB01N"
              accountCurrentBalance:
                type: "string"
                example: "196.5"
          description: "Request object"
      responses:
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
        201-A:
          description: "Success Response [Approved Transaction]"
          examples:
            application/json:
              responseCode: "00"
              messageType: "0110"
              accountId: "285004355"
              personId: "402391632"
              transReqId: "4755492672"
              cardId: "150412528"
              chipCardFlag: "Y"
              procCode_003: "000000"
              amount_004: "10.00"
              transmissionDateTime_007: "2018-02-08T09:53:59.873Z"
              transactionLocalDateTime_012_013: "2018-02-08T09:53:59.873Z"
              expirationDate_014: "1802"
              merchantType_018: "5542"
              entryMode_022: "020"
              acquiringInstitutionId_032: "595"
              deviceTerminalDetails_041: "S41268"
              cardAcceptorTerminalId_042: "CONCORD NET-EPS"
              cardAcceptorNameLocation_043: "1100 CARR RD           WILMINGTON   DEUS"
              merchantName_048: "RED ROBIN (DMS Rest.)"
              pin_052: "0123456789ABCDEF"
              additionalAmounts_54: "0001840C000000000001"
              nationalPOSConditionCode_058: "00000012003"
              networkData_063: "81PSF999AXS"
              chipCardData_106: "|0000|000000||000000|0000000800|000000001012|000006789876|FBCDFFFFFFFFDABC|0000000000|0000|00||||||||||840|00|0|840|141203|17690|00|12345678|"
              additionalData_110: "AX101FFF00000000000000000000 PURCHASE IDENTIFIER       010120010000000012345678901234567890123DMS000000000"
              additionalData_123: "TDPA01YCB01N"
              accountCurrentBalance: "196.5"
          schema:
            properties:
              responseCode:
                type: "string"
                description: "Response Code"
                example: 0
              messageType:
                type: "integer"
                description: "Message Type"
                example: 72
        201-B:
          description: "Success Response [Declined Transaction]"
          examples:
            application/json:
              responseCode: "05"
              messageType: "0110"
              accountId: "285004355"
              personId: "402391632"
              transReqId: "4755492672"
              cardId: "150412528"
              chipCardFlag: "Y"
              procCode_003: "000000"
              amount_004: "10.00"
              transmissionDateTime_007: "2018-02-08T09:53:59.873Z"
              transactionLocalDateTime_012_013: "2018-02-08T09:53:59.873Z"
              expirationDate_014: "1802"
              merchantType_018: "5542"
              entryMode_022: "020"
              acquiringInstitutionId_032: "595"
              deviceTerminalDetails_041: "S41268"
              cardAcceptorTerminalId_042: "CONCORD NET-EPS"
              cardAcceptorNameLocation_043: "1100 CARR RD           WILMINGTON   DEUS"
              merchantName_048: "RED ROBIN (DMS Rest.)"
              pin_052: "0123456789ABCDEF"
              additionalAmounts_54: "0001840C000000000001"
              nationalPOSConditionCode_058: "00000012003"
              networkData_063: "81PSF999AXS"
              chipCardData_106: "|0000|000000||000000|0000000800|000000001012|000006789876|FBCDFFFFFFFFDABC|0000000000|0000|00||||||||||840|00|0|840|141203|17690|00|12345678|"
              additionalData_110: "AX101FFF00000000000000000000 PURCHASE IDENTIFIER       010120010000000012345678901234567890123DMS000000000"
              additionalData_123: "TDPA01YCB01N"
              accountCurrentBalance: "196.5"
          schema:
            properties:
              responseCode:
                type: "string"
                description: "Response Code"
                example: 5
              messageType:
                type: "integer"
                description: "Message Type"
                example: 64
  /(AuthRequest120):
    post:
      tags:
        - "Swiftbox"
      summary: "Auth Request 120"
      description: "Auth Request 120"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: false
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            properties:
              messageType:
                type: "string"
                description: "Auth request type"
                example: "0120"
              accountId:
                type: "string"
                description: "Account ID"
                example: "285004355"
              personId:
                type: "string"
                description: "Person ID"
                example: "402391632"
              transReqId:
                type: "string"
                description: "Transaction Request ID"
                example: "4755492672"
              cardId:
                type: "string"
                description: "Card ID"
                example: "150412528"
              chipCardFlag:
                type: "string"
                example: "Y"
              procCode_003:
                type: "string"
                example: "000000"
              amount_004:
                type: "string"
                example: "10.00"
              transmissionDateTime_007:
                type: "string"
                example: "2018-02-08T09:53:59.873Z"
              transactionLocalDateTime_012_013:
                type: "string"
                example: "2018-02-08T09:53:59.873Z"
              expirationDate_014:
                type: "string"
                example: "1802"
              merchantType_018:
                type: "string"
                example: "5542"
              entryMode_022:
                type: "string"
                example: "020"
              acquiringInstitutionId_032:
                type: "string"
                example: "595"
              deviceTerminalDetails_041:
                type: "string"
                example: "S41268"
              cardAcceptorTerminalId_042:
                type: "string"
                example: "CONCORD NET-EPS"
              cardAcceptorNameLocation_043:
                type: "string"
                example: "1100 CARR RD           WILMINGTON   DEUS"
              merchantName_048:
                type: "string"
                example: "RED ROBIN (DMS Rest.)"
              pin_052:
                type: "string"
                example: "0123456789ABCDEF"
              additionalAmounts_54:
                type: "string"
                example: "0001840C000000000001"
              nationalPOSConditionCode_058:
                type: "string"
                example: "00000012003"
              networkData_063:
                type: "string"
                example: "81PSF999AXS"
              chipCardData_106:
                type: "string"
                example: "|0000|000000||000000|0000000800|000000001012|000006789876|FBCDFFFFFFFFDABC|0000000000|0000|00||||||||||840|00|0|840|141203|17690|00|12345678|"
              additionalData_110:
                type: "string"
                example: "AX101FFF00000000000000000000 PURCHASE IDENTIFIER       010120010000000012345678901234567890123DMS000000000"
              additionalData_123:
                type: "string"
                example: "TDPA01YCB01N"
              accountCurrentBalance:
                type: "string"
                example: "196.5"
          description: "Request object"
      responses:
        200:
          description: "Success Response"
          examples:
            application/json:
              responseCode: "00"
              messageType: "0130"
              accountId: "285004355"
              personId: "402391632"
              transReqId: "4755492672"
              cardId: "150412528"
              chipCardFlag: "Y"
              procCode_003: "000000"
              amount_004: "10.00"
              transmissionDateTime_007: "2018-02-08T09:53:59.873Z"
              transactionLocalDateTime_012_013: "2018-02-08T09:53:59.873Z"
              expirationDate_014: "1802"
              merchantType_018: "5542"
              entryMode_022: "020"
              acquiringInstitutionId_032: "595"
              deviceTerminalDetails_041: "S41268"
              cardAcceptorTerminalId_042: "CONCORD NET-EPS"
              cardAcceptorNameLocation_043: "1100 CARR RD           WILMINGTON   DEUS"
              merchantName_048: "RED ROBIN (DMS Rest.)"
              pin_052: "0123456789ABCDEF"
              additionalAmounts_54: "0001840C000000000001"
              nationalPOSConditionCode_058: "00000012003"
              networkData_063: "81PSF999AXS"
              chipCardData_106: "|0000|000000||000000|0000000800|000000001012|000006789876|FBCDFFFFFFFFDABC|0000000000|0000|00||||||||||840|00|0|840|141203|17690|00|12345678|"
              additionalData_110: "AX101FFF00000000000000000000 PURCHASE IDENTIFIER       010120010000000012345678901234567890123DMS000000000"
              additionalData_123: "TDPA01YCB01N"
              accountCurrentBalance: "196.5"
          schema:
            properties:
              responseCode:
                type: "string"
                description: "Response Code"
                example: 0
              messageType:
                type: "integer"
                description: "Message Type"
                example: 88
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /(AuthRequest120IssuerDecline):
    post:
      tags:
        - "Swiftbox"
      summary: "Auth Request 120 Issuer Declined"
      description: "Auth Request 120 Issuer Declined"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: false
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            properties:
              messageType:
                type: "string"
                description: "Auth request type"
                example: "0120"
              accountId:
                type: "string"
                description: "Account ID"
                example: "285004355"
              personId:
                type: "string"
                description: "Person ID"
                example: "402391632"
              transReqId:
                type: "string"
                description: "Transaction Request ID"
                example: "4755492672"
              cardId:
                type: "string"
                description: "Card ID"
                example: "150412528"
              chipCardFlag:
                type: "string"
                example: "Y"
              procCode_003:
                type: "string"
                example: "000000"
              amount_004:
                type: "string"
                example: "10.00"
              transmissionDateTime_007:
                type: "string"
                example: "2018-02-08T09:53:59.873Z"
              transactionLocalDateTime_012_013:
                type: "string"
                example: "2018-02-08T09:53:59.873Z"
              expirationDate_014:
                type: "string"
                example: "1802"
              merchantType_018:
                type: "string"
                example: "5542"
              entryMode_022:
                type: "string"
                example: "020"
              acquiringInstitutionId_032:
                type: "string"
                example: "595"
              deviceTerminalDetails_041:
                type: "string"
                example: "S41268"
              cardAcceptorTerminalId_042:
                type: "string"
                example: "CONCORD NET-EPS"
              cardAcceptorNameLocation_043:
                type: "string"
                example: "1100 CARR RD           WILMINGTON   DEUS"
              merchantName_048:
                type: "string"
                example: "RED ROBIN (DMS Rest.)"
              pin_052:
                type: "string"
                example: "0123456789ABCDEF"
              additionalAmounts_54:
                type: "string"
                example: "0001840C000000000001"
              nationalPOSConditionCode_058:
                type: "string"
                example: "00000012003"
              networkData_063:
                type: "string"
                example: "81PSF999AXS"
              chipCardData_106:
                type: "string"
                example: "|0000|000000||000000|0000000800|000000001012|000006789876|FBCDFFFFFFFFDABC|0000000000|0000|00||||||||||840|00|0|840|141203|17690|00|12345678|"
              additionalData_110:
                type: "string"
                example: "AX101FFF00000000000000000000 PURCHASE IDENTIFIER       010120010000000012345678901234567890123DMS000000000"
              additionalData_123:
                type: "string"
                example: "TDPA01YCB01N"
              accountCurrentBalance:
                type: "string"
                example: "196.5"
          description: "Request object"
      responses:
        200:
          description: "Success Response"
          examples:
            application/json:
              responseCode: "05"
              messageType: "0130"
              accountId: "285004355"
              personId: "402391632"
              transReqId: "4755492672"
              cardId: "150412528"
              chipCardFlag: "Y"
              procCode_003: "000000"
              amount_004: "10.00"
              transmissionDateTime_007: "2018-02-08T09:53:59.873Z"
              transactionLocalDateTime_012_013: "2018-02-08T09:53:59.873Z"
              expirationDate_014: "1802"
              merchantType_018: "5542"
              entryMode_022: "020"
              acquiringInstitutionId_032: "595"
              deviceTerminalDetails_041: "S41268"
              cardAcceptorTerminalId_042: "CONCORD NET-EPS"
              cardAcceptorNameLocation_043: "1100 CARR RD           WILMINGTON   DEUS"
              merchantName_048: "RED ROBIN (DMS Rest.)"
              pin_052: "0123456789ABCDEF"
              additionalAmounts_54: "0001840C000000000001"
              nationalPOSConditionCode_058: "00000012003"
              networkData_063: "81PSF999AXS"
              chipCardData_106: "|0000|000000||000000|0000000800|000000001012|000006789876|FBCDFFFFFFFFDABC|0000000000|0000|00||||||||||840|00|0|840|141203|17690|00|12345678|"
              additionalData_110: "AX101FFF00000000000000000000 PURCHASE IDENTIFIER       010120010000000012345678901234567890123DMS000000000"
              additionalData_123: "TDPA01YCB01N"
              accountCurrentBalance: "196.5"
          schema:
            properties:
              responseCode:
                type: "string"
                description: "Response Code"
                example: "05"
              messageType:
                type: "integer"
                description: "Message Type"
                example: "0130"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/card/{hash}/limits/{channel}:
    get:
      tags:
        - "Limits"
      summary: "Retrieves a channel specific card limits configuration"
      description: "Retrieves the card limits configuration of the given card hash and channel"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: false
          type: "string"
        - name: "hash"
          in: "path"
          required: true
          type: "string"
          description: "SHA-256 hash of card number"
        - name: "channel"
          in: "path"
          required: true
          type: "string"
          description: "Payment Channel (ATM,POS,ECOM,MOTO,CNTC) or MCC tier 2 Id"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              limits:
                - enabled: false
                  limit:
                    monthly:
                      limit: 10000
                      enabled: false
                      balance: 0
                      windowStart: "2018-06-30T16:00:00.000Z"
                      windowEnd: "2018-07-31T15:59:59.999Z"
                      thresholds:
                        - 0.5
                    weekly:
                      limit: 3000
                      enabled: false
                      balance: 0
                      windowStart: "2018-07-14T16:00:00.000Z"
                      windowEnd: "2018-07-21T15:59:59.999Z"
                      thresholds:
                        - 0.5
                    daily:
                      limit: 1000
                      enabled: false
                      balance: 0
                      windowStart: "2018-07-16T16:00:00.000Z"
                      windowEnd: "2018-07-17T15:59:59.999Z"
                      thresholds:
                        - 0.5
                  currencyCode: "840"
                - enabled: false
                  limit:
                    monthly:
                      limit: 10000
                      enabled: false
                      balance: 0
                      windowStart: "2018-06-30T16:00:00.000Z"
                      windowEnd: "2018-07-31T15:59:59.999Z"
                      thresholds: []
                    weekly:
                      limit: 3000
                      enabled: false
                      balance: 0
                      windowStart: "2018-07-14T16:00:00.000Z"
                      windowEnd: "2018-07-21T15:59:59.999Z"
                      thresholds: []
                    daily:
                      limit: 1000
                      enabled: false
                      balance: 0
                      windowStart: "2018-07-16T16:00:00.000Z"
                      windowEnd: "2018-07-17T15:59:59.999Z"
                      thresholds: []
                  currencyCode: "153"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns HTTP code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              limits:
                type: "array"
                items:
                  properties:
                    enabled:
                      type: "boolean"
                      description: "Binary indicating card on/off status"
                      example: true
                    limit:
                      type: "object"
                      properties:
                        monthly:
                          properties:
                            limit:
                              type: "number"
                              description: "Returns currently set limit value"
                              example: 10000
                            enabled:
                              type: "boolean"
                              description: "Returns true if the limit control is active, else returns false"
                              example: false
                            balance:
                              type: "number"
                              description: "Returns the amount the card has spent towards a particular limit"
                              example: 0
                            windowStart:
                              type: "string"
                              format: "date-time"
                              description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                              example: "2018-06-30T16:00:00.000Z"
                            windowEnd:
                              type: "string"
                              format: "date-time"
                              description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                              example: "2018-07-31T15:59:59.999Z"
                        weekly:
                          properties:
                            limit:
                              type: "number"
                              description: "Returns currently set limit value"
                              example: 10000
                            enabled:
                              type: "boolean"
                              description: "Returns true if the limit control is active, else returns false"
                              example: false
                            balance:
                              type: "number"
                              description: "Returns the amount the card has spent towards a particular limit"
                              example: 0
                            windowStart:
                              type: "string"
                              format: "date-time"
                              description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                              example: "2018-06-30T16:00:00.000Z"
                            windowEnd:
                              type: "string"
                              format: "date-time"
                              description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                              example: "2018-07-31T15:59:59.999Z"
                        daily:
                          type: "object"
                          properties:
                            limit:
                              type: "number"
                              description: "Returns currently set limit value"
                              example: 10000
                            enabled:
                              type: "boolean"
                              description: "Returns true if the limit control is active, else returns false"
                              example: false
                            balance:
                              type: "number"
                              description: "Returns the amount the card has spent towards a particular limit"
                              example: 0
                            windowStart:
                              type: "string"
                              format: "date-time"
                              description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                              example: "2018-06-30T16:00:00.000Z"
                            windowEnd:
                              type: "string"
                              format: "date-time"
                              description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                              example: "2018-07-31T15:59:59.999Z"
                    currencyCode:
                      type: "string"
                      description: "ISO 4217 numeric currency code. Defaults to the client installation country."
                      example: "153"
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Channel"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is hash / channel"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
    put:
      tags:
        - "Limits"
      summary: "Updates a channel specific card limits configuration"
      description: "Updates the card limits configuration of the given card hash and channel"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: false
          type: "string"
        - name: "hash"
          in: "path"
          required: true
          type: "string"
          description: "SHA-256 hash of card number"
        - name: "channel"
          in: "path"
          required: true
          type: "string"
          description: "Payment Channel (ATM,POS,ECOM,MOTO,CNTC) or MCC tier 2 Id"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "limit"
            properties:
              enabled:
                type: "boolean"
                description: "Returns true if the limit control is active, else returns false"
                format: "int32"
                example: true
              currencyCode:
                type: "string"
                description: "ISO 4217 numeric currency code. Defaults to the client installation country."
                example: "153"
              limit:
                properties:
                  monthly:
                    type: "object"
                    properties:
                      enabled:
                        type: "boolean"
                        description: "Returns true if the limit control is active, else returns false"
                        example: true
                      amount:
                        type: "number"
                        description: "Amount threshold to set for the limit control"
                        example: 698.75
                      thresholds:
                        type: "list"
                        description: "Thresholds for soft limits alert"
                        example:
                          - 0.5
                  weekly:
                    type: "object"
                    properties:
                      enabled:
                        type: "boolean"
                        description: "Returns true if the limit control is active, else returns false"
                        example: true
                      amount:
                        type: "number"
                        description: "Amount threshold to set for the limit control"
                        example: 244.5
                      thresholds:
                        type: "list"
                        description: "Thresholds for soft limits alert"
                        example:
                          - 0.5
                  daily:
                    type: "object"
                    properties:
                      enabled:
                        type: "boolean"
                        description: "Returns true if the limit control is active, else returns false"
                        example: true
                      amount:
                        type: "number"
                        description: "Amount threshold to set for the limit control"
                        example: 31.25
                      thresholds:
                        type: "list"
                        description: "Thresholds for soft limits alert"
                        example:
                          - 0.5
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 200"
                example: 200
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
        400-A:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                description: "Returns Missing Resource: Card Hash"
                example: "Missing Resource: Card Hash"
        400-B:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                description: "Returns Invalid Resource: Card Hash"
                example: "Invalid Resource: Card Hash"
        400-C:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Enabled"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                type: "string"
                description: "Returns Missing Resource: Enabled"
                example: "Missing Resource: Enabled"
        400-D:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Enabled"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns Invalid Resource: Enabled"
                example: "Invalid Resource: Enabled"
  /api/v1/card/{hash}/limits:
    get:
      tags:
        - "Limits"
      summary: "Retrieves a card's overall limits configuration"
      description: "Retrieves a card's limits configuration for all channels"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: false
          type: "string"
        - name: "hash"
          in: "path"
          required: true
          type: "string"
          description: "SHA-256 hash of card number"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
              limits:
                - enabled: false
                  limit:
                    1:
                      monthly:
                        limit: 10000
                        enabled: false
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        thresholds:
                          - 0.5
                      weekly:
                        limit: 3000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-14T16:00:00.000Z"
                        windowEnd: "2018-07-21T15:59:59.999Z"
                        thresholds:
                          - 0.5
                      daily:
                        limit: 1000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-16T16:00:00.000Z"
                        windowEnd: "2018-07-17T15:59:59.999Z"
                        thresholds:
                          - 0.5
                    TOTAL:
                      monthly:
                        limit: 10000
                        enabled: false
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        thresholds:
                          - 0.5
                      weekly:
                        limit: 3000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-14T16:00:00.000Z"
                        windowEnd: "2018-07-21T15:59:59.999Z"
                        thresholds:
                          - 0.5
                      daily:
                        limit: 1000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-16T16:00:00.000Z"
                        windowEnd: "2018-07-17T15:59:59.999Z"
                        thresholds:
                          - 0.5
                    ATM:
                      monthly:
                        limit: 10000
                        enabled: false
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                      weekly:
                        limit: 3000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-14T16:00:00.000Z"
                        windowEnd: "2018-07-21T15:59:59.999Z"
                        thresholds: []
                      daily:
                        limit: 1000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-16T16:00:00.000Z"
                        windowEnd: "2018-07-17T15:59:59.999Z"
                        thresholds: []
                    POS:
                      monthly:
                        limit: 10000
                        enabled: false
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        thresholds: []
                      weekly:
                        limit: 3000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-14T16:00:00.000Z"
                        windowEnd: "2018-07-21T15:59:59.999Z"
                        thresholds: []
                      daily:
                        limit: 1000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-16T16:00:00.000Z"
                        windowEnd: "2018-07-17T15:59:59.999Z"
                    ECOM:
                      monthly:
                        limit: 10000
                        enabled: false
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        thresholds: []
                      weekly:
                        limit: 3000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-14T16:00:00.000Z"
                        windowEnd: "2018-07-21T15:59:59.999Z"
                        thresholds: []
                      daily:
                        limit: 1000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-16T16:00:00.000Z"
                        windowEnd: "2018-07-17T15:59:59.999Z"
                        thresholds: []
                    MOTO:
                      monthly:
                        limit: 10000
                        enabled: false
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        thresholds: []
                      weekly:
                        limit: 3000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-14T16:00:00.000Z"
                        windowEnd: "2018-07-21T15:59:59.999Z"
                        thresholds: []
                      daily:
                        limit: 1000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-16T16:00:00.000Z"
                        windowEnd: "2018-07-17T15:59:59.999Z"
                        thresholds: []
                  currencyCode: "840"
                - enabled: false
                  limit:
                    1:
                      monthly:
                        limit: 10000
                        enabled: false
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        thresholds: []
                      weekly:
                        limit: 3000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-14T16:00:00.000Z"
                        windowEnd: "2018-07-21T15:59:59.999Z"
                        thresholds: []
                      daily:
                        limit: 1000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-16T16:00:00.000Z"
                        windowEnd: "2018-07-17T15:59:59.999Z"
                        thresholds: []
                    TOTAL:
                      monthly:
                        limit: 10000
                        enabled: false
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        thresholds: []
                      weekly:
                        limit: 3000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-14T16:00:00.000Z"
                        windowEnd: "2018-07-21T15:59:59.999Z"
                        thresholds: []
                      daily:
                        limit: 1000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-16T16:00:00.000Z"
                        windowEnd: "2018-07-17T15:59:59.999Z"
                        thresholds: []
                    ATM:
                      monthly:
                        limit: 10000
                        enabled: false
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                      weekly:
                        limit: 3000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-14T16:00:00.000Z"
                        windowEnd: "2018-07-21T15:59:59.999Z"
                        thresholds: []
                      daily:
                        limit: 1000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-16T16:00:00.000Z"
                        windowEnd: "2018-07-17T15:59:59.999Z"
                        thresholds: []
                    POS:
                      monthly:
                        limit: 10000
                        enabled: false
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        thresholds: []
                      weekly:
                        limit: 3000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-14T16:00:00.000Z"
                        windowEnd: "2018-07-21T15:59:59.999Z"
                        thresholds: []
                      daily:
                        limit: 1000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-16T16:00:00.000Z"
                        windowEnd: "2018-07-17T15:59:59.999Z"
                        thresholds: []
                    ECOM:
                      monthly:
                        limit: 10000
                        enabled: false
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        thresholds: []
                      weekly:
                        limit: 3000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-14T16:00:00.000Z"
                        windowEnd: "2018-07-21T15:59:59.999Z"
                        thresholds: []
                      daily:
                        limit: 1000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-16T16:00:00.000Z"
                        windowEnd: "2018-07-17T15:59:59.999Z"
                        thresholds: []
                    MOTO:
                      monthly:
                        limit: 10000
                        enabled: false
                        balance: 0
                        windowStart: "2018-06-30T16:00:00.000Z"
                        windowEnd: "2018-07-31T15:59:59.999Z"
                        thresholds: []
                      weekly:
                        limit: 3000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-14T16:00:00.000Z"
                        windowEnd: "2018-07-21T15:59:59.999Z"
                        thresholds: []
                      daily:
                        limit: 1000
                        enabled: false
                        balance: 0
                        windowStart: "2018-07-16T16:00:00.000Z"
                        windowEnd: "2018-07-17T15:59:59.999Z"
                        thresholds: []
                  currencyCode: "153"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns HTTP code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              limits:
                type: "array"
                items:
                  type: "object"
                  properties:
                    enabled:
                      type: "boolean"
                      description: "Binary indicating card on/off status"
                      example: false
                    limit:
                      type: "object"
                      properties:
                        TOTAL:
                          type: "object"
                          properties:
                            monthly:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                            weekly:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                            daily:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                        ATM:
                          type: "object"
                          description: "Returns limit control object for <CHANNEL> ∈ {total, POS, ATM, ECOM, MOTO, Contactless}"
                          properties:
                            monthly:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                            weekly:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                            daily:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                        POS:
                          type: "object"
                          description: "Returns limit control object for <CHANNEL> ∈ {total, POS, ATM, ECOM, MOTO, Contactless}"
                          properties:
                            monthly:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                            weekly:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                            daily:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                        ECOM:
                          type: "object"
                          description: "Returns limit control object for <CHANNEL> ∈ {total, POS, ATM, ECOM, MOTO, Contactless}"
                          properties:
                            monthly:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                            weekly:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                            daily:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                        MOTO:
                          type: "object"
                          description: "Returns limit control object for <CHANNEL> ∈ {total, POS, ATM, ECOM, MOTO, Contactless}"
                          properties:
                            monthly:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                            weekly:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                            daily:
                              properties:
                                limit:
                                  type: "number"
                                  description: "Returns currently set limit value"
                                  example: 10000
                                enabled:
                                  type: "boolean"
                                  description: "Returns true if the limit control is active, else returns false"
                                  example: false
                                balance:
                                  type: "number"
                                  description: "Returns the amount the card has spent towards a particular limit"
                                  example: 0
                                windowStart:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control was activated. Resets depending on the (PERIOD)."
                                  example: "2018-06-30T16:00:00.000Z"
                                windowEnd:
                                  type: "string"
                                  format: "date-time"
                                  description: "Returns the ISO 8601 timestamp at which the limit control will be deactivated. Resets depending on the (PERIOD)."
                                  example: "2018-07-31T15:59:59.999Z"
                    currencyCode:
                      type: "string"
                      description: "Returns the ISO 4217 numeric currency code of all limit values for the card"
                      example: "840"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
        400-A:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                description: "Returns Missing Resource: Card Hash"
                example: "Missing Resource: Card Hash"
        400-B:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                description: "Returns Invalid Resource: Card Hash"
                example: "Invalid Resource: Card Hash"
    put:
      tags:
        - "Limits"
      summary: "Updates a card's overall limits configuration"
      description: "Sets or updates the enabled property of limit controls for a specific card."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: false
          type: "string"
        - name: "hash"
          in: "path"
          required: true
          type: "string"
          description: "SHA-256 hash of card number"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "enabled"
            properties:
              enabled:
                type: "boolean"
                description: "Returns true if the limit control is active, else returns false"
                format: "int32"
                example: true
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              http_code: 200
              status_code: 0
          schema:
            properties:
              status:
                type: "string"
                description: "Returns SUCCESS"
                example: "SUCCESS"
              http_code:
                type: "integer"
                description: "Returns 200"
                example: 200
              status_code:
                type: "integer"
                description: "Returns 0"
                example: 0
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
        400-A:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                description: "Returns Missing Resource: Card Hash"
                example: "Missing Resource: Card Hash"
        400-B:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                description: "Returns Invalid Resource: Card Hash"
                example: "Invalid Resource: Card Hash"
        400-C:
          description: "Error - Validation on missing request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Enabled"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101"
                example: 101
              status_message:
                type: "string"
                description: "Returns Missing Resource: Enabled"
                example: "Missing Resource: Enabled"
        400-D:
          description: "Error - Validation on invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 102
              status_message: "Invalid Resource: Enabled"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns Invalid Resource: Enabled"
                example: "Invalid Resource: Enabled"
  /updateLimitControl:
    put:
      tags:
        - "Limits"
      summary: "Updates limit configuration of a specific card"
      description: "Updates overall limit configuration of the card identification provided in the request body"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: false
          type: "string"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "limit"
              - "balance"
              - "id"
              - "enabled"
              - "currencyCode"
              - "cardId"
              - "cardHash"
            properties:
              limit:
                properties:
                  TOTAL:
                    properties:
                      monthly:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            description: "Monthly limit value"
                            example: 10000
                          enabled:
                            type: "boolean"
                            description: "Boolean value for enable monthly limit"
                            example: true
                      weekly:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            description: "Monthly limit value"
                            example: 3000
                          enabled:
                            type: "boolean"
                            description: "Boolean value for enable monthly limit"
                            example: true
                      daily:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            description: "Monthly limit value"
                            example: 1000
                          enabled:
                            type: "boolean"
                            description: "Boolean value for enable monthly limit"
                            example: true
                  POS:
                    properties:
                      monthly:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            description: "Monthly limit value"
                            example: 10000
                          enabled:
                            type: "boolean"
                            description: "Boolean value for enable monthly limit"
                            example: true
                      weekly:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            description: "Monthly limit value"
                            example: 3000
                          enabled:
                            type: "boolean"
                            description: "Boolean value for enable monthly limit"
                            example: true
                      daily:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            description: "Monthly limit value"
                            example: 1000
                          enabled:
                            type: "boolean"
                            description: "Boolean value for enable monthly limit"
                            example: true
                  ATM:
                    properties:
                      monthly:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            description: "Monthly limit value"
                            example: 10000
                          enabled:
                            type: "boolean"
                            description: "Boolean value for enable monthly limit"
                            example: true
                      weekly:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            description: "Monthly limit value"
                            example: 3000
                          enabled:
                            type: "boolean"
                            description: "Boolean value for enable monthly limit"
                            example: true
                      daily:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            description: "Monthly limit value"
                            example: 1000
                          enabled:
                            type: "boolean"
                            description: "Boolean value for enable monthly limit"
                            example: true
                  ECOM:
                    properties:
                      monthly:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            description: "Monthly limit value"
                            example: 10000
                          enabled:
                            type: "boolean"
                            description: "Boolean value for enable monthly limit"
                            example: true
                      weekly:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            description: "Monthly limit value"
                            example: 3000
                          enabled:
                            type: "boolean"
                            description: "Boolean value for enable monthly limit"
                            example: true
                      daily:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            description: "Monthly limit value"
                            example: 1000
                          enabled:
                            type: "boolean"
                            description: "Boolean value for enable monthly limit"
                            example: true
                  MOTO:
                    properties:
                      monthly:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            example: 0
                      weekly:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            example: 0
                      daily:
                        type: "object"
                        properties:
                          limit:
                            type: "number"
                            example: 0
              balance:
                properties:
                  total:
                    properties:
                      transactions:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            id:
                              type: "integer"
                              example: 1
                            amount:
                              type: "number"
                              description: "Amount the card can spend against a particular limit"
                              example: 10
                      monthly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      weekly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      daily:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                  POS:
                    properties:
                      transactions:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            id:
                              type: "integer"
                              example: 1
                            amount:
                              type: "number"
                              description: "Amount the card can spend against a particular limit"
                              example: 10
                      monthly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      weekly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      daily:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                  ATM:
                    properties:
                      transactions:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            id:
                              type: "integer"
                              example: 1
                            amount:
                              type: "number"
                              description: "Amount the card can spend against a particular limit"
                              example: 10
                      monthly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      weekly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      daily:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                  ECOM:
                    properties:
                      transactions:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            id:
                              type: "integer"
                              example: 1
                            amount:
                              type: "number"
                              description: "Amount the card can spend against a particular limit"
                              example: 10
                      monthly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      weekly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      daily:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                  MOTO:
                    properties:
                      transactions:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            id:
                              type: "integer"
                              example: 1
                            amount:
                              type: "number"
                              description: "Amount the card can spend against a particular limit"
                              example: 10
                      monthly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      weekly:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
                      daily:
                        properties:
                          balance:
                            type: "number"
                            example: 0
                          windowStart:
                            type: "string"
                            format: "date-time"
                            example: "2018-06-30T16:00:00.000Z"
                          windowEnd:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-31T15:59:59.999Z"
                          updatedAt:
                            type: "string"
                            format: "date-time"
                            example: "2018-07-11T14:25:15.354Z"
              id:
                type: "integer"
                description: "Limit control ID"
                example: 1
              enabled:
                type: "boolean"
                description: "Set true if the limit control must be active, else set to false"
                example: true
              currencyCode:
                type: "string"
                description: "Currency code"
                example: "840"
              cardId:
                type: "integer"
                description: "Card ID"
                example: 1
              cardHash:
                description: "SHA-256 hash of card number"
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              cardHash: "1234567890"
          schema:
            properties:
              cardHash:
                type: "string"
                example: "5b82beb2ab7084d5dc2f8239f1f16fcff8d6b636b8852479534e3b195222903a"
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Card Hash"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "Missing or Invalid Resource: (RESOURCE), where (RESOURCE) is hash / channel / limit"
                example: "Missing Resource: Card Hash"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
        500:
          description: "Error - Internal server error"
          examples:
            application/json:
              status: "ERROR"
              http_code: 500
              status_code: 100
              status_message: "Internal server error"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns status ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 500"
                example: 500
              status_code:
                type: "integer"
                description: "Returns status code 100"
                example: 100
              status_message:
                type: "string"
                description: "Returns status message"
                example: "Internal server error"
  /api/v1/mcc/groups/{tier}:
    get:
      tags:
        - "Mcc"
      summary: "Retrieves an Org's MCC groups"
      description: "Retrieves a list of MCC groups of the desired tier from an Org's settings"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: false
          type: "string"
        - name: "tier"
          in: "path"
          required: true
          type: "integer"
          description: "Tier of MCC group (either 1 or 2 only)"
        - name: "org_id"
          in: "path"
          required: true
          type: "integer"
          description: "Organization ID"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              - status: "SUCCESS"
                status_code: 0
                http_code: 200
                tier: 1
                mccGroups:
                  - name: "Auto Rental"
                    id: "1-0"
                    codes:
                      - 1362
                      -
                        - 1432
                        - 1437
                      - 7261
              - status: "SUCCESS"
                status_code: 0
                http_code: 200
                tier: 2
                mccGroups:
                  - name: "Travel"
                    id: 1
                    groups:
                      - "1-0"
                      - "1-2"
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns HTTP code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              tier:
                type: "integer"
                example: 1
              mccGroups:
                type: "array"
                description: "The properties of the mccGroups items differ between tier 1 and tier 2 responses"
                items:
                  type: "object"
                  properties:
                    name:
                      type: "string"
                      example: "Auto Rental"
                    id:
                      type: "string"
                      example: "1-0"
                    codes:
                      type: "array"
                      items:
                        type: "integer"
                        example: 1432
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Organization ID"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "'Missing or Invalid Resource: <RESOURCE>, where <RESOURCE> is Organization ID / Tier'"
                example: "Missing Resource: Organization ID | Invalid Resource: Organization ID | Invalid Resource: Tier"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
    post:
      tags:
        - "Mcc"
      summary: "Adds a MCC group to an Org"
      description: "Adds a MCC group to an Org's settings (Only available for tier 2 groups)"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: false
          type: "string"
        - name: "tier"
          in: "path"
          required: true
          type: "integer"
          description: "Tier of MCC group (either 1 or 2 only)"
        - name: "org_id"
          in: "path"
          required: true
          type: "integer"
          description: "Organization ID"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "groupName"
              - "groups"
            properties:
              groupName:
                type: "string"
                description: "Name to be given to MCC group"
                example: "Travel"
              groups:
                type: "array"
                items:
                  type: "string"
                  description: "Ids of tier 1 groups"
                  example: "1-0"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              status_code: 0
              http_code: 200
              mccGroupId: 1
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns HTTP code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              mccGroupId:
                type: "integer"
                example: 1
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Group Name"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "'Missing or Invalid Resource: <RESOURCE>, where <RESOURCE> is Organization ID / Tier / Group Name / Groups'"
                example: "Missing Resource: Organization ID | Invalid Resource: Organization ID | Missing Resource: Group Name | Invalid Resource: Group Name | Missing Resource: Groups | Invalid Resource: Groups | Invalid Resource: Tier"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
  /api/v1/mcc/groups/{tier}/{id}:
    get:
      tags:
        - "Mcc"
      summary: "Retrieves an Org's MCC group by Id"
      description: "Retrieves a MCC group and its associated MCC codes/groups from an Org's settings by Id"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: false
          type: "string"
        - name: "tier"
          in: "path"
          required: true
          type: "integer"
          description: "Tier of MCC group (either 1 or 2 only)"
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "ID of MCC group (type string if tier is 1)"
        - name: "org_id"
          in: "path"
          required: true
          type: "integer"
          description: "Organization ID"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              - status: "SUCCESS"
                status_code: 0
                http_code: 200
                tier: 1
                mccGroup:
                  name: "Restaurants"
                  id: "1-0"
                  codes:
                    - code: 1362
                      description: "Fast Food Merchant"
                    - code: 7261
                      description: "Food Truck Merchant"
              - status: "SUCCESS"
                status_code: 0
                http_code: 200
                tier: 2
                mccGroup:
                  name: "Travel"
                  id: 1
                  groups:
                    - name: "Auto rental"
                      id: "1-0"
                      codes:
                        - 1362
                        - 7261
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns HTTP code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              tier:
                type: "integer"
                example: 1
              mccGroup:
                type: "object"
                description: "The mccGroup properties differ between tier 1 and tier 2 responses"
                properties:
                  name:
                    type: "string"
                    example: "Auto Rental"
                  id:
                    type: "string"
                    example: "1-0"
                  codes:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        code:
                          type: "integer"
                          example: 1363
                        description:
                          type: "string"
                          example: "Gas station"
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Missing Resource: Organization ID"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "'Missing or Invalid Resource: <RESOURCE>, where <RESOURCE> is Organization ID / Tier / Id'"
                example: "Missing Resource: Organization ID | Invalid Resource: Organization ID | Invalid Resource: Tier | Invalid Resource: Group Id"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
    put:
      tags:
        - "Mcc"
      summary: "Updates an Org's MCC group"
      description: "Updates a MCC group's properties from an Org's settings (Only available for tier 2 groups)"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: false
          type: "string"
        - name: "tier"
          in: "path"
          required: true
          type: "integer"
          description: "Tier of MCC group (either 1 or 2 only)"
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "ID of MCC group (type string if tier is 1)"
        - name: "org_id"
          in: "path"
          required: true
          type: "integer"
          description: "Organization ID"
        - name: "body"
          required: true
          in: "body"
          schema:
            required:
              - "groups"
            properties:
              groupName:
                type: "string"
                description: "Name to update for the MCC group"
                example: "Travel"
              groups:
                type: "array"
                items:
                  type: "string"
                  description: "Ids of tier 1 groups to be updated with"
                  example: "1-0"
          description: "Request object"
      responses:
        200:
          description: "Success - Responds successfully"
          examples:
            application/json:
              status: "SUCCESS"
              status_code: 0
              http_code: 200
              mccGroupId: 1
          schema:
            properties:
              status:
                type: "string"
                example: "SUCCESS"
                description: "Returns SUCCESS"
              http_code:
                type: "integer"
                example: 200
                description: "Returns HTTP code 200"
              status_code:
                type: "integer"
                description: "Returns status code 0"
                example: 0
              mccGroupId:
                type: "integer"
                example: 1
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Invalid Resource: Organization ID"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "'Missing or Invalid Resource: <RESOURCE>, where <RESOURCE> is Organization ID / Tier / Group Name / Groups / Id'"
                example: "Missing Resource: Organization ID | Invalid Resource: Organization ID | Invalid Resource: Group Name | Missing Resource: Groups | Invalid Resource: Groups | Invalid Resource: Group Id | Invalid Resource: Tier"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
    delete:
      tags:
        - "Mcc"
      summary: "Deletes an org's MCC group"
      description: "Deletes a MCC group from an Org's settings (Only available for tier 2 groups)"
      produces:
        - "application/json"
      parameters:
        - name: "X-Auth-Token"
          description: "The authorization token sent for every API request"
          in: "header"
          required: false
          type: "string"
        - name: "tier"
          in: "path"
          required: true
          type: "integer"
          description: "Tier of MCC group (either 1 or 2 only)"
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "ID of MCC group (type string if tier is 1)"
        - name: "org_id"
          in: "path"
          required: true
          type: "integer"
          description: "Organization ID"
      responses:
        204:
          description: "Success - Responds successfully with the field(s) created/updated"
          examples:
            application/json:
              http_code: 204
          schema:
            properties:
              http_code:
                type: "integer"
                description: "Returns 204"
                example: 204
        400:
          description: "Error - Validation on missing or invalid request parameter"
          examples:
            application/json:
              status: "ERROR"
              http_code: 400
              status_code: 101
              status_message: "Invalid Resource: Organization ID"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns HTTP code 400"
                example: 400
              status_code:
                type: "integer"
                description: "Returns 101 for missing resources, 102 for invalid resources"
                example: 101
              status_message:
                type: "string"
                description: "'Missing or Invalid Resource: <RESOURCE>, where <RESOURCE> is Organization ID / Tier / Id'"
                example: "Missing Resource: Organization ID | Invalid Resource: Organization ID | Invalid Resource: Group Id | Invalid Resource: Tier"
        401:
          description: "Error - Missing or invalid X-Auth-Token header"
          examples:
            application/json:
              status: "ERROR"
              http_code: 401
              status_code: 102
              status_message: "This request requires authentication"
          schema:
            properties:
              status:
                type: "string"
                description: "Returns ERROR"
                example: "ERROR"
              http_code:
                type: "integer"
                description: "Returns 401"
                example: 401
              status_code:
                type: "integer"
                description: "Returns 102"
                example: 102
              status_message:
                type: "string"
                description: "Returns message: This request requires authentication"
                example: "This request requires authentication"
securityDefinitions: {}
tags: []
definitions: {}
